# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

#trigger:
#- azure-pipelines

pool:
  vmImage: 'macos-latest'

steps:
# Download GitHub Release
# Downloads a GitHub Release from a repository.
- task: DownloadGitHubRelease@0
  inputs:
    connection: Jellyfin Release Download
    userRepository: 'jellyfin/jellyfin'
    defaultVersionType: 'latest'
    itemPattern: 'jellyfin_*_macos.tar.gz'
    downloadPath: '$(System.WorkFolder)'

# Extract Files
# Extract a variety of archive and compression files such as .7z, .rar, .tar.gz, and .zip.
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(System.WorkFolder)/jellyfin_*_macos.tar.gz'
    destinationFolder: '$(Pipeline.Workspace)/jellyfin-mac-app-resources'

# Bash
# Run a Bash script on macOS, Linux, or Windows
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'mv $(Pipeline.Workspace)/jellyfin-mac-app-resources/jellyfin* $(Pipeline.Workspace)/jellyfin-mac-app-resources/jellyfin'
    failOnStderr: true

# Bash
# Run a Bash script on macOS, Linux, or Windows
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'wget https://ffmpeg.zeranoe.com/builds/macos64/static/ffmpeg-4.0.2-macos64-static.zip -P $(Build.SourcesDirectory)'
    failOnStderr: false

# Extract Files
# Extract a variety of archive and compression files such as .7z, .rar, .tar.gz, and .zip.
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Build.SourcesDirectory)/ffmpeg-4.0.2-macos64-static.zip'
    destinationFolder: '$(Build.SourcesDirectory)/ffmpegtemp/'

# Bash
# Run a Bash script on macOS, Linux, or Windows
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'mv $(Build.SourcesDirectory)/ffmpegtemp/ffmpeg*/bin/ffmpeg $(Pipeline.Workspace)/jellyfin-mac-app-resources/'
    failOnStderr: true


- task: Xcode@5
  inputs:
    actions: 'build'
    configuration: 'Release'
    sdk: 
    xcWorkspacePath: '**/*.xcodeproj'
    destinationPlatformOption: 'macOS'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build/Release/'
    ArtifactName: 'drop'
    publishLocation: 'Container'
